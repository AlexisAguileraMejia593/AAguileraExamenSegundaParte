//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AAguileraExamenSegundaParteEntities : DbContext
    {
        public AAguileraExamenSegundaParteEntities()
            : base("name=AAguileraExamenSegundaParteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VideoJuegos> VideoJuegos { get; set; }
    
        public virtual int VideoJuegosAdd(string nombre, string descripcion, string aÑO, string compañia, Nullable<int> ventas)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var aÑOParameter = aÑO != null ?
                new ObjectParameter("AÑO", aÑO) :
                new ObjectParameter("AÑO", typeof(string));
    
            var compañiaParameter = compañia != null ?
                new ObjectParameter("Compañia", compañia) :
                new ObjectParameter("Compañia", typeof(string));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VideoJuegosAdd", nombreParameter, descripcionParameter, aÑOParameter, compañiaParameter, ventasParameter);
        }
    
        public virtual int VideoJuegosDelete(Nullable<int> idVideoJuegos)
        {
            var idVideoJuegosParameter = idVideoJuegos.HasValue ?
                new ObjectParameter("IdVideoJuegos", idVideoJuegos) :
                new ObjectParameter("IdVideoJuegos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VideoJuegosDelete", idVideoJuegosParameter);
        }
    
        public virtual ObjectResult<VideoJuegosGetAll_Result> VideoJuegosGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VideoJuegosGetAll_Result>("VideoJuegosGetAll");
        }
    
        public virtual ObjectResult<VideoJuegosGetById_Result> VideoJuegosGetById(Nullable<int> idVideoJuegos)
        {
            var idVideoJuegosParameter = idVideoJuegos.HasValue ?
                new ObjectParameter("IdVideoJuegos", idVideoJuegos) :
                new ObjectParameter("IdVideoJuegos", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VideoJuegosGetById_Result>("VideoJuegosGetById", idVideoJuegosParameter);
        }
    
        public virtual int VideoJuegosUpdate(Nullable<int> idVideoJuegos, string nombre, string descripcion, string aÑO, string compañia, Nullable<int> ventas)
        {
            var idVideoJuegosParameter = idVideoJuegos.HasValue ?
                new ObjectParameter("IdVideoJuegos", idVideoJuegos) :
                new ObjectParameter("IdVideoJuegos", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var aÑOParameter = aÑO != null ?
                new ObjectParameter("AÑO", aÑO) :
                new ObjectParameter("AÑO", typeof(string));
    
            var compañiaParameter = compañia != null ?
                new ObjectParameter("Compañia", compañia) :
                new ObjectParameter("Compañia", typeof(string));
    
            var ventasParameter = ventas.HasValue ?
                new ObjectParameter("Ventas", ventas) :
                new ObjectParameter("Ventas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VideoJuegosUpdate", idVideoJuegosParameter, nombreParameter, descripcionParameter, aÑOParameter, compañiaParameter, ventasParameter);
        }
    }
}
